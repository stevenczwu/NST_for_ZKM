Neural Style Transfer is a deep learning-based algorithm which may achieve state-of-the-art performance on texture synthesis and image stylization tasks. It was firstly proposed by Leon Gatys from University of Tübingen in Germany, and has been subsequently improved by lots of other computer scientists.

 

Early image stylization algorithms were either based on procedural methods or patch-based methods, most of which could only capture low-level features of a certain style. In 2012, Geoff Hinton's work with deep neural networks set off an enormous surge around artificial intelligence using deep learning. Later, Leon Gatys found out that deep neural networks may explain human texture perception with high-level features, thus adapt the algorithm for image stylization. The original Gatys' algorithm will do iterative optimizations on the output image to reduce its both losses comparing with the input content image and style image through their high-level feature representations in the classical VGG network. The whole iteration process will take 1~3 minutes depends on the number of iterations on single GPU (GeForce GTX 980 Ti, same below). 



Since Gatys' paper was posted online in August 2015, lots of other exciting works followed. Several fast neural style stylization methods were proposed, most of which were combined with generative networks. With these generative networks, a certain model may be trained for one certain style image. And with the pre-trained models, content images may run straightforward through the network to generate stylized output images. In our project, we adapted the codes from Justion Johnson to train various models as presented. It will take 3~4 hours to train one model on single GPU, but once the model is trained, it will take only ca. 80 millionsecond to stylize an image, which makes real-time video style transfer possible. Different versions of algorithms have been implemented in several popular applications including Prisma and Alter. Interested audience may also check deepart.io to try with your own images. Have fun!